@model IEnumerable<Estimating_Tool.Models.LineItem>

@{
    /**/

    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    @Html.DropDownList("searchString", (IEnumerable<SelectListItem>)ViewBag.DropdownOptions, new { @class = "dropdownSearch", @id = "Searchlineitemname", @title = "Search line item name" })
    <input type="submit" value="search" id="SubmitButton" />
    <input type="button" value="Clear" id="clearButton" onclick="ClearFields()"/>
}

@if (TempData["RecordAdded"] != null)
{
    <div class="AllGood">
        @TempData["RecordAdded"]
    </div>
}@if (TempData["RecordEdited"] != null)
{
    <div class="AllGood">
        @TempData["RecordEdited"]
    </div>
}@if (TempData["RecordDeleted"] != null)
{
    <div class="AllGood">
        @TempData["RecordDeleted"]
    </div>
}


<table class="table">
    @*Table headers with sorting*@
    <tr>
        <th>
            @Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.LineItemIdSortParm, currentFilter = ViewBag.currentFilter })
        </th>
        <th>
            @Html.ActionLink("Line Item Name", "Index", new { sortOrder = ViewBag.LineItemStrSortParm, currentFilter = ViewBag.currentFilter })
        </th>
        <th>
            @Html.ActionLink("Line Item Group", "Index", new { sortOrder = ViewBag.LineItemGroupIdSortParm, currentFilter = ViewBag.currentFilter })
        </th>
    </tr>

    @*for loop of each record*@
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LineItemId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LineItemStr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LineItemTypeGroup.LineItemTypeGroupStr)
            </td>
            <td>
                @*Edit, Details, Delete links*@
                @Html.ActionLink("Edit", "Edit", new { id = item.LineItemId }) |
                @Html.ActionLink("Details", "Details", new { id = item.LineItemId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.LineItemId })
            </td>
        </tr>
    }

</table>


@Html.Partial("_PagingPartial", Model) @*Paging*@

@section Scripts{
    <script src="~/Scripts/searchReset.js"></script>
    <script>
        selectdropdown(".dropdownSearch")

        //$('#clearButton').click(function () {
        //    searchReset('#Searchlineitemname', '#SubmitButton');
        //});
    </script>
    <script>


            function ClearFields() {
                document.getElementById('Searchlineitemname').value = ""; //sets the SearchBox textbox to value of null (clears it)
                document.getElementById("SubmitButton").click(); //Applies the filter of null by clicking the submit button automatically
            }
        </script>
}