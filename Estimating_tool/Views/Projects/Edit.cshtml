@model Estimating_Tool.View_Model.ProjectVM

@{
    /**/

    ViewBag.Title = "Edit";
}
<head>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
</head>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Project</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProjectId)

    <div class="form-group">
        @Html.LabelFor(model => model.AtlasID)

        @Html.EditorFor(model => model.AtlasID, new { htmlAttributes = new { @class = "form-control", @required = true } })
        @Html.ValidationMessageFor(model => model.AtlasID, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectName)

        @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control", @required = true } })
        @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrencyId)
        <br />
        @Html.DropDownListFor(m => m.CurrencyId, Model.CurrencyNameList, new { @class = "dropdownSearch", @title = "Please select currency name" }) @*runs scripts below*@
        @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rate)

        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @required = true } })
        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerID)
        <br />
        @Html.DropDownListFor(m => m.CustomerID, Model.CustomerNameList, new { @class = "dropdownSearch", @id = "CustomerName" })
        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SelectedConsultantIds)
        <br />
        @Html.ListBox("ConsultantIds", Model.selectListItems, new { @class = "dropdownSearch",@required = true })
        @Html.ValidationMessageFor(model => model.SelectedConsultantIds, "", new { @class = "text-danger" })

    </div>


    <div class="form-actions no-color">
        <input type="submit" value="Save" class="btn btn-default" /> |
        @if (ViewBag.Return == "Project" || ViewBag.Return == null)
        {
            @Html.ActionLink("Back to List", "Index")
        }
        else if (ViewBag.Return == "CustomerDetails")
        {
            @Html.ActionLink("Details", "Details", "CustomerDetails", new { id = Model.CustomerID }, null)
        }
    </div>

</div>
}

@section scripts{

    <script>
        $(document).ready(function () {
            $('.dropdownSearch').selectpicker({
                liveSearch: true,
                showSubtext: true,

            });
        });
    </script>

    <script>
        selectdropdown(".dropdownSearch");
    </script>

}